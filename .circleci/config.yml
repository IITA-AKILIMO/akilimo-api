version: 2.1
jobs:
  build:
    working_directory: ~/akilimo
    docker:
      - image: circleci/openjdk:14-jdk-buster

    steps:
      - checkout
      - run:
          name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
          command: sudo chmod +x ./gradlew
      - run:
          name: Run Tests and check coverage
          command: ./gradlew check

      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit
          destination: test-results
      - store_artifacts:
          path: target/site/jacoco
          destination: coverage

  build_docker:
    working_directory: ~/akilimo
    docker:
      - image: circleci/openjdk:14-jdk-buster

    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
          command: sudo chmod +x ./gradlew
      - run: ./gradlew build -x test

      - run:
          name: Build application and migration images
          command: |
            docker build -f Dockerfile -t iita/akilimo-api:$CIRCLE_SHA1 .
            docker build -f Dockerfile.migration -t iita/akilimo-api-migration:$CIRCLE_SHA1 .

      - run:
          name: Save application Docker images
          command: |
            mkdir /tmp/workspace
            docker save -o /tmp/workspace/image-api.tar iita/akilimo-api:$CIRCLE_SHA1
            docker save -o /tmp/workspace/image-migration.tar iita/akilimo-api-migration:$CIRCLE_SHA1

      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # taken to be the root directory of the workspace.
          root: /tmp
          paths:
            - workspace

  push_latest:
    working_directory: ~/akilimo
    docker:
      - image: docker:18.06.3-ce-git
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: /tmp
      - run:
          name: Load application Docker images
          command: |
            docker load --input /tmp/workspace/image-api.tar
            docker load --input /tmp/workspace/image-migration.tar
      - run:
          name: Tag docker images
          command: |
            docker tag iita/akilimo-api:$CIRCLE_SHA1 iita/akilimo-api:latest
            docker tag iita/akilimo-api-migration:$CIRCLE_SHA1 iita/akilimo-api-migration:latest
      - run:
          name: Push application Docker image
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push iita/akilimo-api:latest
            docker push iita/akilimo-api-migration:latest

  push_production:
    working_directory: ~/akilimo
    docker:
      - image: docker:18.06.3-ce-git
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: /tmp
      - run:
          name: Load application Docker images
          command: |
            docker load --input /tmp/workspace/image-api.tar
            docker load --input /tmp/workspace/image-migration.tar
      - run:
          name: Tag docker image
          command: |
            docker tag iita/akilimo-api:$CIRCLE_SHA1 iita/akilimo-api:production
            docker tag iita/akilimo-api-migration:$CIRCLE_SHA1 iita/akilimo-api-migration:production
      - run:
          name: Push application Docker images
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push iita/akilimo-api:production
            docker push iita/akilimo-api-migration:production

workflows:
  version: 2
  build_and_push:
    jobs:
      - build
      - build_docker:
          requires:
            - build
          filters:
            branches:
              only:
                - develop
                - main
      - push_latest:
          requires:
            - build_docker
          filters:
            branches:
              only:
                - develop
      - push_production:
          requires:
            - build_docker
          filters:
            branches:
              only:
                - main
